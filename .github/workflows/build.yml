name: "Build & Draft Release"

on:
  workflow_dispatch:

env:
  INTG_NAME: xbox
  # THE FIX IS HERE: Revert to the last known working version
  PYTHON_VER: 3.11.12-0.3.0

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version-and-id.outputs.VERSION }}
      driver_id: ${{ steps.get-version-and-id.outputs.DRIVER_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 200

      - name: Get version and id
        id: get-version-and-id
        run: |
          echo "VERSION=$(jq .version -r driver.json)" >> $GITHUB_ENV
          echo "DRIVER_ID=$(jq .driver_id -r driver.json)" >> $GITHUB_ENV
          echo "VERSION=$(jq .version -r driver.json)" >> $GITHUB_OUTPUT
          echo "DRIVER_ID=$(jq .driver_id -r driver.json)" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-system binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          echo "Starting pyinstaller build"
          docker run --rm --name builder \
            --platform=aarch64 \
            --user=$(id -u):$(id -g) \
            -v ${GITHUB_WORKSPACE}:/workspace \
            docker.io/unfoldedcircle/r2-pyinstaller:${PYTHON_VER} \
            bash -c \
            "cd /workspace && \
             python -m pip install -r requirements.txt && \
             pyinstaller --clean --onedir --name intg-${DRIVER_ID} --collect-all zeroconf --collect-all httpx --collect-all pydantic uc_intg_xbox/driver.py"

      - name: Prepare artifacts
        shell: bash
        run: |
          mkdir -p artifacts/bin
          mv dist/intg-${{ env.DRIVER_ID }}/* artifacts/bin
          # This creates the final executable script that will be run by the